name: Train models

on:
  # workflow_run:
  #   workflows: [ "Fetch and Process Data" ]
  #   types:
  #     - completed
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
  DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_USER_TOKEN }}
  DAGSHUB_REPO_NAME: ${{ secrets.DAGSHUB_REPO_NAME }}

jobs:
  validation:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Prerequisites
        run: |
          python -m pip install --upgrade pip
          pip install  poetry 
          pip install dvc[s3]

      - name: DVC setup
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}

      - name: Pull data
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull

      - name: DVC pull
        run: |
          dvc pull -r origin

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Train models
        run: |
          poetry run poe train

      - name: Predict models
        run: |
          poetry run poe predict

      - name: Commit and push models
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff-index --quiet HEAD || (git commit -a -m "action: train models" --allow-empty)
          dvc push -r origin
          git push

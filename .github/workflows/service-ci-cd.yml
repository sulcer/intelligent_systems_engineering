name: ML Service CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'src/serve/**'
      - '.github/workflows/service-ci-cd.yml'
      - 'Dockerfile'
  pull_request:
    branches:
      - main
    paths:
      - 'src/serve/**'
      - '.github/workflows/service-ci-cd.yml'
      - 'Dockerfile'

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
  DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_USER_TOKEN }}
  DAGSHUB_REPO_NAME: ${{ secrets.DAGSHUB_REPO_NAME }}
  DATABASE_URL: sqlite:///predictions.sqlite


jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Prerequisites
        run: |
          python -m pip install --upgrade pip
          pip install  poetry

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run linter
        run: |
          poetry run poe lint
        continue-on-error: false

#      - name: Create SQLite Database
#        run: |
#          touch predictions.sqlite
#        working-directory: ${{ github.workspace }}

      - name: Run tests
        run: |
          poetry run poe test

      - name: Install Railway CLI
        run: bash <(curl -fsSL cli.new)

      - name: Deploy to Railway
        run: railway up --service mbajk-ml-service
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}